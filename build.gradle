buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'io.franzbecker.gradle-lombok' version '1.14'
    id 'org.asciidoctor.convert' version '1.5.3'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.asciidoctor.convert'
apply plugin: 'pmd'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'jdepend'
apply plugin: 'groovy'

apply from: "$rootDir/gradle/jacoco.gradle"

group = 'hr.mladen.cikara'
version = '0.0.1-SNAPSHOT'

description = "spring-hal-browser-learning-test"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

ext {
    snippetsDir = file('build/generated-snippets')
    springCloudVersion = 'Greenwich.RELEASE'
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-hateoas')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.cloud:spring-cloud-starter-oauth2')
    implementation('javax.json:javax.json-api')
    implementation('org.glassfish:javax.json:1.1.3')

    compileOnly('org.projectlombok:lombok')

    runtimeOnly('com.h2database:h2')
    runtimeOnly('org.postgresql:postgresql')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.junit.jupiter:junit-jupiter-engine:5.1.1')
    testImplementation('org.junit.platform:junit-platform-launcher:1.3.1')
    testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
    testImplementation('org.springframework.security:spring-security-test')
    testImplementation('org.assertj:assertj-core')
    testImplementation('org.codehaus.groovy:groovy')
    testImplementation('org.spockframework:spock-spring:1.2-groovy-2.5')

    annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')

    asciidoctor('org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.2.RELEASE')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    dependsOn test
    inputs.dir snippetsDir
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

checkstyle {
    toolVersion '8.13'
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

tasks.withType(JDepend) {
    reports {
        xml.enabled = false
        text.enabled = true
    }
}